/*
* Generated by SGWrapperGen - DO NOT EDIT!
*
* SwinGame wrapper for C - Images
*
* Wrapping sgImages.pas
*/

#ifndef sgImages
#define sgImages

#include <stdint.h>

#ifndef __cplusplus
  #include <stdbool.h>
#endif

#include "Types.h"

circle bitmap_cell_circle(bitmap bmp, const point2d *pt);
circle bitmap_cell_circle_byval(bitmap bmp, const point2d pt);
circle bitmap_cell_circle_xy(bitmap bmp, float x, float y);
circle bitmap_cell_circle_scale(bitmap bmp, const point2d *pt, float scale);
circle bitmap_cell_circle_scale_byval(bitmap bmp, const point2d pt, float scale);
int32_t bitmap_cell_columns(bitmap bmp);
int32_t bitmap_cell_count(bitmap bmp);
int32_t bitmap_cell_height(bitmap bmp);
rectangle bitmap_cell_rectangle_at_origin(bitmap bmp);
rectangle bitmap_cell_rectangle_xy(float x, float y, bitmap bmp);
int32_t bitmap_cell_rows(bitmap bmp);
int32_t bitmap_cell_width(bitmap bmp);
circle bitmap_circle(bitmap bmp, const point2d *pt);
circle bitmap_circle_byval(bitmap bmp, const point2d pt);
circle bitmap_circle_xy(bitmap bmp, float x, float y);
void bitmap_filename(bitmap bmp, char *result);
int32_t bitmap_height(bitmap bmp);
void bitmap_name(bitmap bmp, char *result);
bitmap bitmap_named(const char *name);
rectangle bitmap_rect_at_origin(bitmap bmp);
rectangle bitmap_rect_xy(float x, float y, bitmap bmp);
rectangle bitmap_rectangle_of_cell(bitmap src, int32_t cell);
void bitmap_set_cell_details(bitmap bmp, int32_t width, int32_t height, int32_t columns, int32_t rows, int32_t count);
int32_t bitmap_width(bitmap bmp);
bool bitmaps_interchangable(bitmap bmp1, bitmap bmp2);
void clear_surface_to_black(bitmap dest);
void clear_surface(bitmap dest, color toColor);
bitmap create_bitmap(int32_t width, int32_t height);
bitmap create_bitmap_named(const char *name, int32_t width, int32_t height);
void draw_bitmap(bitmap src, float x, float y);
void draw_bitmap_named(const char *name, float x, float y);
void draw_bitmap_with_opts(bitmap src, float x, float y, const drawing_options *opts);
void draw_bitmap_with_opts_byval(bitmap src, float x, float y, const drawing_options opts);
void draw_bitmap_named_with_opts(const char *name, float x, float y, const drawing_options *opts);
void draw_bitmap_named_with_opts_byval(const char *name, float x, float y, const drawing_options opts);
void draw_cell(bitmap src, int32_t cell, float x, float y);
void draw_cell_opts(bitmap src, int32_t cell, float x, float y, const drawing_options *opts);
void draw_cell_opts_byval(bitmap src, int32_t cell, float x, float y, const drawing_options opts);
void free_bitmap(bitmap bitmapToFree);
bool has_bitmap(const char *name);
bitmap load_bitmap(const char *filename);
bitmap load_bitmap_named(const char *name, const char *filename);
bool pixel_drawn_at_point(bitmap bmp, float x, float y);
void release_all_bitmaps();
void release_bitmap(const char *name);
void save_bitmap(bitmap src, const char *filepath);
void setup_bitmap_for_collisions(bitmap src);

#ifdef __cplusplus
// C++ overloaded functions
circle bitmap_cell_circle(bitmap bmp, const point2d &pt);
circle bitmap_cell_circle(bitmap bmp, float x, float y);
circle bitmap_cell_circle(bitmap bmp, const point2d &pt, float scale);
rectangle bitmap_cell_rectangle(bitmap bmp);
rectangle bitmap_cell_rectangle(float x, float y, bitmap bmp);
circle bitmap_circle(bitmap bmp, const point2d &pt);
circle bitmap_circle(bitmap bmp, float x, float y);
rectangle bitmap_rectangle(bitmap bmp);
rectangle bitmap_rectangle(float x, float y, bitmap bmp);
void clear_surface(bitmap dest);
bitmap create_bitmap(const char *name, int32_t width, int32_t height);
void draw_bitmap(const char *name, float x, float y);
void draw_bitmap(bitmap src, float x, float y, const drawing_options &opts);
void draw_bitmap(const char *name, float x, float y, const drawing_options &opts);
void draw_cell(bitmap src, int32_t cell, float x, float y, const drawing_options &opts);

#endif

#endif

