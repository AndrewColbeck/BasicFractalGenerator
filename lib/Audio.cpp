/*
* Generated by SGWrapperGen - DO NOT EDIT!
*
* SwinGame wrapper for C - Audio
*
* Wrapping sgAudio.pas
*/

#include "SGSDK.h"
#include "Audio.h"

#include "Types.h"

bool audio_ready()
{
    return sg_Audio_AudioReady() != 0;
}

void close_audio()
{
    sg_Audio_CloseAudio();
}

#ifdef __cplusplus

void fade_music_in(const char *name, int32_t ms)
{
    sg_Audio_FadeMusicNamedIn(name, ms);
}

#endif

void fade_music_named_in(const char *name, int32_t ms)
{
    sg_Audio_FadeMusicNamedIn(name, ms);
}

void fade_music_in(music mus, int32_t ms)
{
    sg_Audio_FadeMusicIn(mus, ms);
}

#ifdef __cplusplus

void fade_music_in(music mus, int32_t loops, int32_t ms)
{
    sg_Audio_FadeMusicInWithLoops(mus, loops, ms);
}

#endif

void fade_music_in_with_loops(music mus, int32_t loops, int32_t ms)
{
    sg_Audio_FadeMusicInWithLoops(mus, loops, ms);
}

#ifdef __cplusplus

void fade_music_in(const char *name, int32_t loops, int32_t ms)
{
    sg_Audio_FadeMusicNamedInWithLoops(name, loops, ms);
}

#endif

void fade_music_named_in_with_loops(const char *name, int32_t loops, int32_t ms)
{
    sg_Audio_FadeMusicNamedInWithLoops(name, loops, ms);
}

void fade_music_out(int32_t ms)
{
    sg_Audio_FadeMusicOut(ms);
}

#ifdef __cplusplus

void free_music(music &mus)
{
    sg_Audio_FreeMusic(&mus);
}

#endif

void free_music(music *mus)
{
    sg_Audio_FreeMusic(mus);
}

#ifdef __cplusplus

void free_sound_effect(sound_effect &effect)
{
    sg_Audio_FreeSoundEffect(&effect);
}

#endif

void free_sound_effect(sound_effect *effect)
{
    sg_Audio_FreeSoundEffect(effect);
}

bool has_music(const char *name)
{
    return sg_Audio_HasMusic(name) != 0;
}

bool has_sound_effect(const char *name)
{
    return sg_Audio_HasSoundEffect(name) != 0;
}

music load_music(const char *filename)
{
    return sg_Audio_LoadMusic(filename);
}

music load_music_named(const char *name, const char *filename)
{
    return sg_Audio_LoadMusicNamed(name, filename);
}

sound_effect load_sound_effect(const char *filename)
{
    return sg_Audio_LoadSoundEffect(filename);
}

sound_effect load_sound_effect_named(const char *name, const char *filename)
{
    return sg_Audio_LoadSoundEffectNamed(name, filename);
}

void music_filename(music mus, char *result)
{
    sg_Audio_MusicFilename(mus, result);
}

void music_name(music mus, char *result)
{
    sg_Audio_MusicName(mus, result);
}

music music_named(const char *name)
{
    return sg_Audio_MusicNamed(name);
}

bool music_playing()
{
    return sg_Audio_MusicPlaying() != 0;
}

float music_volume()
{
    return sg_Audio_MusicVolume();
}

void open_audio()
{
    sg_Audio_OpenAudio();
}

void pause_music()
{
    sg_Audio_PauseMusic();
}

#ifdef __cplusplus

void play_music(const char *name)
{
    sg_Audio_PlayMusicNamedWithLoops(name, -1);
}

#endif

void play_music_named(const char *name)
{
    sg_Audio_PlayMusicNamedWithLoops(name, -1);
}

void play_music(music mus)
{
    sg_Audio_PlayMusicWithLoops(mus, -1);
}

#ifdef __cplusplus

void play_music(music mus, int32_t loops)
{
    sg_Audio_PlayMusicWithLoops(mus, loops);
}

#endif

void play_music_with_loops(music mus, int32_t loops)
{
    sg_Audio_PlayMusicWithLoops(mus, loops);
}

#ifdef __cplusplus

void play_music(const char *name, int32_t loops)
{
    sg_Audio_PlayMusicNamedWithLoops(name, loops);
}

#endif

void play_music_named_with_loops(const char *name, int32_t loops)
{
    sg_Audio_PlayMusicNamedWithLoops(name, loops);
}

void play_sound_effect(sound_effect effect)
{
    sg_Audio_PlaySoundEffectWithLoopAndVolume(effect, 1, 1.0);
}

#ifdef __cplusplus

void play_sound_effect(const char *name)
{
    sg_Audio_PlaySoundEffectNamedWithLoopAndVolume(name, 1, 1.0);
}

#endif

void play_sound_effect_named(const char *name)
{
    sg_Audio_PlaySoundEffectNamedWithLoopAndVolume(name, 1, 1.0);
}

#ifdef __cplusplus

void play_sound_effect(sound_effect effect, float vol)
{
    sg_Audio_PlaySoundEffectWithLoopAndVolume(effect, 1, vol);
}

#endif

void play_sound_effect_with_volume(sound_effect effect, float vol)
{
    sg_Audio_PlaySoundEffectWithLoopAndVolume(effect, 1, vol);
}

#ifdef __cplusplus

void play_sound_effect(sound_effect effect, int32_t loops)
{
    sg_Audio_PlaySoundEffectWithLoopAndVolume(effect, loops, 1.0);
}

#endif

void play_sound_effect_with_loop(sound_effect effect, int32_t loops)
{
    sg_Audio_PlaySoundEffectWithLoopAndVolume(effect, loops, 1.0);
}

#ifdef __cplusplus

void play_sound_effect(const char *name, float vol)
{
    sg_Audio_PlaySoundEffectNamedWithLoopAndVolume(name, 1, vol);
}

#endif

void play_sound_effect_named_with_volume(const char *name, float vol)
{
    sg_Audio_PlaySoundEffectNamedWithLoopAndVolume(name, 1, vol);
}

#ifdef __cplusplus

void play_sound_effect(const char *name, int32_t loops)
{
    sg_Audio_PlaySoundEffectNamedWithLoopAndVolume(name, loops, 1.0);
}

#endif

void play_sound_effect_named_with_loop(const char *name, int32_t loops)
{
    sg_Audio_PlaySoundEffectNamedWithLoopAndVolume(name, loops, 1.0);
}

#ifdef __cplusplus

void play_sound_effect(sound_effect effect, int32_t loops, float vol)
{
    sg_Audio_PlaySoundEffectWithLoopAndVolume(effect, loops, vol);
}

#endif

void play_sound_effect_with_loop_and_volume(sound_effect effect, int32_t loops, float vol)
{
    sg_Audio_PlaySoundEffectWithLoopAndVolume(effect, loops, vol);
}

#ifdef __cplusplus

void play_sound_effect(const char *name, int32_t loops, float vol)
{
    sg_Audio_PlaySoundEffectNamedWithLoopAndVolume(name, loops, vol);
}

#endif

void play_sound_effect_named_with_loop_and_volume(const char *name, int32_t loops, float vol)
{
    sg_Audio_PlaySoundEffectNamedWithLoopAndVolume(name, loops, vol);
}

void release_all_music()
{
    sg_Audio_ReleaseAllMusic();
}

void release_all_sound_effects()
{
    sg_Audio_ReleaseAllSoundEffects();
}

void release_music(const char *name)
{
    sg_Audio_ReleaseMusic(name);
}

void release_sound_effect(const char *name)
{
    sg_Audio_ReleaseSoundEffect(name);
}

void resume_music()
{
    sg_Audio_ResumeMusic();
}

void set_music_volume(float value)
{
    sg_Audio_SetMusicVolume(value);
}

void sound_effect_filename(sound_effect effect, char *result)
{
    sg_Audio_SoundEffectFilename(effect, result);
}

void sound_effect_name(sound_effect effect, char *result)
{
    sg_Audio_SoundEffectName(effect, result);
}

sound_effect sound_effect_named(const char *name)
{
    return sg_Audio_SoundEffectNamed(name);
}

#ifdef __cplusplus

bool sound_effect_playing(const char *name)
{
    return sg_Audio_SoundEffectNamedPlaying(name) != 0;
}

#endif

bool sound_effect_named_playing(const char *name)
{
    return sg_Audio_SoundEffectNamedPlaying(name) != 0;
}

bool sound_effect_playing(sound_effect effect)
{
    return sg_Audio_SoundEffectPlaying(effect) != 0;
}

void stop_music()
{
    sg_Audio_StopMusic();
}

void stop_sound_effect(sound_effect effect)
{
    sg_Audio_StopSoundEffect(effect);
}

#ifdef __cplusplus

void stop_sound_effect(const char *name)
{
    sg_Audio_StopSoundEffectNamed(name);
}

#endif

void stop_sound_effect_named(const char *name)
{
    sg_Audio_StopSoundEffectNamed(name);
}

bool try_open_audio()
{
    return sg_Audio_TryOpenAudio() != 0;
}

